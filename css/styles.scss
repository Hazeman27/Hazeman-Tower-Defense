@import url("https://use.typekit.net/vdq8enp.css");
@import 'variables';

*, *::before, *::after { box-sizing: border-box; }

body {

	margin: 0;
	padding: 0;
	background-color: #1B1926;
	font-family: obvia, sans-serif;
	font-weight: 400;
	font-style: normal;
	font-size: 0.9rem;
	color: color(light_);
	overflow-x: hidden;
}

h2 {

	font-family: obvia, sans-serif;
	font-weight: 800;
	font-style: normal;
	font-size: 1.8em;
	text-shadow: .06em .06em color(red_);
	text-transform: uppercase;
}

ul { list-style: none }

summary {

	font-size: .8em;
	opacity: .4;
}

.welcome {

	z-index: 1000;
	background-color: color(dark_);
	position: absolute;
	width: 100vw;
	height: 100vh;
	display: grid;
	opacity: 1;
	transform: scale(1);
	justify-items: center;
	align-content: center;
	grid: "canvas" .6fr "body" 1fr / 1fr;
	transition: opacity 1s ease-in-out,
				transform 100ms linear 1s;

	&__text {

		grid-area: body;
		text-align: center;
		display: flex;
		flex-flow: column;
		align-items: center;
	}

	&__title {

		text-transform: uppercase;
		font-style: italic;
		font-size: 3em;
		text-align: center;
		color: color(yellow_);
		cursor: default;
		animation: flicker-logo 5s ease-in-out 1s infinite;
		text-shadow: .05em .05em color(red_);

		small {

			display: block;
			font-size: .6em;
		}
	}

	&__body {

		display: block;
		text-transform: uppercase;
		font-size: 1.5em;
		color: color(yellow_);
		font-weight: 700;
		animation: three-dots 5s linear infinite;
		text-shadow: .08em .08em 0 color(redwood_); 
	}

	#welcome-canvas {

		grid-area: canvas;
		align-self: center;
		border: 1px solid color(violet_);
		border-radius: 5px;
	}

	summary {
		
		position: absolute;
		bottom: 5em;
	}
}

.defeat {

	z-index: 1000;
	background-color: color(dark_);
	position: absolute;
	width: 100vw;
	height: 100vh;
	display: grid;
	opacity: 0;
	transform: scale(0);
	display: grid;
	justify-items: center;
	align-content: center;
	grid: "body" .8fr "stats" 1fr / 1fr;
	transition: opacity 1s ease-in-out;

	&__text {

		grid-area: body;
		text-align: center;
		align-self: center;
	}

	&__title {

		text-transform: uppercase;
		font-style: italic;
		font-size: 5em;
		text-align: center;
		color: color(red_);
		cursor: default;
		text-shadow: .05em .05em color(deepviolet_),
					 .1em .1em color(blue_);

		small {

			display: block;
			font-size: .6em;
		}
	}

	&__body {

		display: block;
		font-size: 1.2em;
	}

	.game__stats {
		text-align: center
	}

	.game__stats__towers-stat-names,
	.game__stats__enemies-stat-names,
	.game__stats__wave-stat-names {
		text-align: right;
	}

	.game__stats__towers-stat-values,
	.game__stats__enemies-stat-values,
	.game__stats__wave-stat-values {
		text-align: left;
	}
}

.game {
	
	position: relative;
	width: 100vw;
	display: grid;
	grid-template-columns: 1.5fr 1000px 1fr;
	grid-gap: 4em;
	padding: 4em;
	place-items: center;
	opacity: 0;
	transition: opacity 1s ease-in-out 1s;
	grid-template-areas:"title title title" 
						"menu canvas stats";

	#menu-button {
		
		display: none;
		&:checked ~ .game__menu-button {
			svg { @for $i from 1 through 3 { rect:nth-child(#{$i}) { transform: translateX(-10px) } } }
		}
	}

	&__menu-button {

		display: none;
		position: absolute;
		justify-self: left;
		left: 2em;
		top: 2em;
		z-index: 6;

		svg rect {

			fill: color(violet_);
			transition: transform 250ms ease-in-out;
			@for $i from 1 through 3 { &:nth-child(#{$i}) { transition-delay: 0ms } }
		}
	}

	#cancel-purchase {

		position: absolute;
		left: 0;
		top: 0;
		padding: 1em;
		transform: translateY(-120%) scale(1);
		opacity: 0;
		background-color: rgba(color(redwood_), .7);
		border: 1px solid red;
		border-radius: $border-radius;
		font-weight: 700;
		text-transform: uppercase;
		transition: opacity 250ms ease-in-out;
		filter: none;
		user-select: none;

		&:hover {	
			filter: brightness(120%);
		}

		&:active {
			transform: translateY(-120%) scale(.9);
		}
	}

	#tower-upgraded {

		position: absolute;
		top: 0px;
		left: 0px;
		color: color(green_);
		text-transform: uppercase;
		font-weight: 700;
		opacity: 0;
		transition: opacity 250ms ease-in-out;
		user-select: none;
		text-align: center;
		width: 100px;
	}

	@keyframes pulse {
		to { transform: scale(.8) }
	}

	#next-wave {

		z-index: 999;
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		background-color: rgba(color(dark_), .5);
		display: flex;
		opacity: 0;
		transform: scale(0);
		justify-content: center;
		align-items: center;
		text-transform: uppercase;
		font-weight: 900;
		font-size: 5em;
		color: color(orange_);
		text-shadow: .05em .05em color(violet_);
		transition: opacity 300ms ease-in-out,
					transform 50ms linear 100ms;
		
		span {

			transform: scale(1);
			animation: pulse 1s ease-in-out infinite alternate-reverse;
		}
	}

	#canvas {

		position: relative;
		margin-top: 1.5em;
		grid-area: canvas;
	}

	#main-canvas, #background-canvas {

		border: 1px solid color(violet_);
		border-radius: 5px;
	}

	#background-canvas {

		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
	}

	&__title {

		grid-area: title;
		margin: -1em;
		text-transform: uppercase;
		font-style: italic;
		font-size: 2em;
		text-align: center;
		color: color(redwood_);
		cursor: default;
		text-shadow: .05em .05em color(violet_),
					 .1em .1em color(blue_);
		animation: none;

		&:hover {
			animation: flicker 3s ease-in-out 200ms infinite;
		}

		small {

			display: block;
			font-size: .6em;
		}
	}

	&__menu {

		z-index: 999;
		grid-area: menu;
		display: grid;
		grid-template-columns: 1fr;
		grid-gap: 1.5em;
		place-items: center;
		grid-template-areas: "title"
							 "tower-tier-1"
							 "tower-tier-2"
							 "tower-tier-3";

		&__title {

			grid-area: title;
			position: relative;
			color: color(cyan_);
			text-transform: uppercase;
			font-size: 3em;
			margin: 0;
			text-align: center;
			text-shadow: .05em .05em color(violet_);
			cursor: default;
			animation: none;

			&:hover {
				animation: flicker 3s ease-in-out 200ms infinite;
			}
		}

		@for $i from 1 through 3 {
			
			&__tower:nth-of-type(#{$i}) {
				grid-area: tower-tier-#{$i};
				&:hover { background-color: rgba(color(nth(map-keys($colors), $i)), .03)}
			}
		}

		&__tower {

			display: grid;
			grid-template-rows: .1fr 1fr .3fr;
			grid-template-columns: .5fr 1fr;
			grid-template-areas: "thumbnail title"
								 "thumbnail description"
								 "thumbnail price";
			background-color: transparent;
			border: 1px solid rgba(color(violet_), .15);
			border-radius: .5em;
			padding: 1em .5em;
			cursor: pointer;
			transform: scale(1);
			transition: border-color 200ms ease-in-out,
						background-color 200ms ease-in-out,
						transform 200ms ease-in-out;

			&:hover { border-color: rgba(color(violet_), .25) }
			&:active { transform: scale(0.9) }
		}

		&__tower-title {

			grid-area: title;
			margin: 0;
		}
		
		&__tower-thumbnail {

			grid-area: thumbnail;
			justify-self: center;
			align-self: center;
		}

		&__tower-description {

			grid-area: description;
		}

		&__tower-price {

			grid-area: price;
			margin: 0;
			color: color(yellow_);
			font-weight: 800;
			font-size: 1.5em;
			position: relative;

			&::after {

				content: '';
				width: 1.2em;
				height: 1.2em;
				position: absolute;
				margin-left: .2em;
				background-image: url('../media/svg/misc/nuclear-gold.svg');
				background-size: cover;
				background-repeat: no-repeat;
			}
		}
	}

	&__stats {
		
		color: color(light-gray_);
		grid-area: stats;
		display: grid;
		grid-template-columns: 1fr 1fr;
		grid-template-areas: "title                            title"
							 "towers-stat-title    towers-stat-title"
							 "towers-stat-names   towers-stat-values"
							 "enemies-stat-title  enemies-stat-title"
							 "enemies-stat-names enemies-stat-values"
							 "wave-stat-title        wave-stat-title"
							 "wave-stat-names       wave-stat-values"
							 "summary                        summary";

		$stats: 'title', 'towers-stat-title', 'towers-stat-names', 'towers-stat-values', 'enemies-stat-title', 'enemies-stat-names', 'enemies-stat-values', 'wave-stat-title', 'wave-stat-names', 'wave-stat-values', 'summary';

		@each $stat in $stats {
			&__#{$stat} {
				
				grid-area: #{$stat};
				margin: 0;
				padding: .5em;
			}
		}

		&__title { padding-left: 0; padding-right: 0; }
	}

	&__summary {

		display: block;
		padding: 0 40%;
		text-align: center;
		position: absolute;
		bottom: -2.5em;

		@media(max-width: 1367px) {
			padding: 0 20%;
		}
	}

	@keyframes sound {
		from { clip-path: inset(0 20px 0 0) }
		to { clip-path: inset(0 0 0 0) }
	}

	&__sound-control {

		position: absolute;
		left: 4em;
		bottom: -1em;
		width: 3em;
		height: 2em;
		opacity: .75;
		background-image: url('../media/svg/misc/sound-control.svg');
		background-size: cover;
		clip-path: inset(0 20px 0 0);
		background-repeat: no-repeat;
		transform: scale(1);
		cursor: pointer;
		transition: opacity 200ms ease-in-out,
					transform 200ms ease-in-out;

		&:hover {
			opacity: 1;
			animation: sound 500ms 1 ease-in-out;
		}

		&:active { transform: scale(0.7) }
	}

	&__nuclear-gold  {

		position: absolute;
		right: 5rem;
		bottom: -1rem;
		font-size: 2.5em;
		font-weight: 800;
		margin: 0;
		color: color(yellow_);
		text-shadow: .05em .05em 0 color(orange_);
		cursor: default;
		filter: none;
		transition: filter 200ms ease-in-out;

		&::before {

			content: '';
			position: absolute;
			right: 120%;
			bottom: .3rem;
			height: 1em;
			width: 1em;
			background-image: url('../media/svg/misc/nuclear-gold.svg');
			background-size: contain;
			background-repeat: no-repeat;
		}

		&:hover {
			filter: contrast(150%);
		}
	}

	&__nuclear-gold_minus {

		position: absolute;
		right: 5rem;
		bottom: -1rem;
		font-size: 2.5em;
		font-weight: 800;
		margin: 0;
		opacity: 0;
		color: color(red_);
		cursor: default;
		transition: opacity 300ms ease-in-out,
					bottom 300ms ease-in-out;

		&::before {
			content: '-';
		}
	}

	&__nuclear-gold_plus {

		position: absolute;
		right: 5rem;
		bottom: -1rem;
		font-size: 2.5em;
		font-weight: 800;
		margin: 0;
		opacity: 0;
		color: color(green_);
		cursor: default;
		transition: opacity 300ms ease-in-out,
					bottom 300ms ease-in-out;

		&::before {
			content: '+';
		}
	}

	&__tower-info {

		z-index: 999;
		position: absolute;
		display: flex;
		flex-flow: column;
		align-items: center;
		transform: scale(0);
		opacity: 0;
		transform-origin: bottom left;
		top: 2em;
		left: 2em;
		padding: 1.5em 1em;
		line-height: 1.5;
		background-color: color(dark_);
		border: $border;
		border-radius: $border-radius;
		transition: transform 150ms cubic-bezier(0.455, 0.03, 0.515, 0.955),
					opacity 500ms ease-in-out;
	}

	&__tower-name {

		color: white;
		margin-top: 0;
	}

	&__tower-stats {

		margin: 0;
		padding: 0;
	}

	&__tower-upgrade, &__tower-sell {

		margin-top: 1em;
		width: 100%;
		padding: .5em;
		text-align: center;
		text-transform: uppercase;
		font-weight: 700;
		font-family: inherit;
		color: color(yellow_);
		border: $border;
		border-radius: $border-radius;
		background-color: transparent;
		cursor: pointer;
		transition: filter 150ms ease-in-out,
					color 150ms ease-in-out,
					background-color 150ms ease-in-out;

		&:hover {
			
			color: color(dark_);
			background-color: color(yellow_);
		}

		&.unavailable {
			
			background-color: lightgray;
			border-color: gray;
			color: color(dark_);
			cursor: not-allowed;

			&:hover {

				background-color: gray;
				color: color(dark_);
			}
		}
	}

	&__tower-upgrade:hover ~ .game__tower-stats_upgrade {
			
		transform: scale(1);
		opacity: 1;
	}

	&__tower-sell {

		color: color(violet_);
		border: 1px solid color(violet_);

		&:hover {
			
			color: color(dark_);
			background-color: color(violet_);
		}
	}

	&__tower-stats_upgrade {

		z-index: 999;
		margin: 0;
		position: absolute;
		width: 120%;
		right: -110%;
		bottom: 8%;
		background-color: color(dark_);
		border: 1px solid color(green_);
		border-radius: $border-radius;
		padding: 1em;
		opacity: 0;
		transform: scale(0);
		transform-origin: left;
		transition: transform 150ms ease-in-out,
					opacity 350ms ease-in-out;
	}

	&__message {

		z-index: 999;
		position: absolute;
		right: 2em;
		top: 2em;
		padding: 1.5em 1em;
		background-color: color(dark_);
		border: $border;
		border-radius: $border-radius;
		opacity: 0;
		transform: scale(0);
		transform-origin: right;
		display: grid;
		gap: 1em;
		grid: "explanation-mark title"
			  "explanation-mark body"
			  "button		  button" / 4em 18em;
		transition: transform 150ms ease-in-out,
			  		opacity 350ms ease-in-out;

		&__explanation-mark {
			
			grid-area: explanation-mark;
			position: relative;
			justify-self: center;
			align-self: center;
			font-size: 5em;
			font-weight: 900;
			line-height: 0;
			margin: 0;
			padding: 0;
			color: color(orange_);
		}

		&__title {

			grid-area: title;
			margin: 0;
		}

		&__body {

			grid-area: body;
			margin: 0;
		}

		&__button {

			grid-area: button;
			justify-self: center;
			padding: .5em;
			text-align: center;
			text-transform: uppercase;
			font-weight: 700;
			color: color(yellow_);
			border: $border;
			border-radius: $border-radius;
			background-color: transparent;
			cursor: pointer;
			transition: filter 150ms ease-in-out,
						color 150ms ease-in-out,
						background-color 150ms ease-in-out;

			&:hover {
				
				color: color(dark_);
				background-color: color(yellow_);
			}
			
		}
	}

	.ready-to-upgrade {

		z-index: 999;
		display: block;
		position: absolute;
		font-weight: 900;
		line-height: 0;
		font-size: 1.2em;
		margin: 0;
		padding: 0;
		color: color(orange_);
		opacity: 0;
		transform: scale(0);
		transition: transform 150ms ease-in-out,
					opacity 350ms ease-in-out;				  
	}

	.tooltip {

		&::after {

			content: '';
			display: none;
			position: absolute;
			width: 1em;
			height: 1em;
			background-color: inherit;
			border: inherit;
			border-top-color: transparent;
			border-right-color: transparent;
		}

		&.top, &.left, &.right, &.bottom { &::after { display: block } }

		&.top::after {

			left: 50%;
			top: 0;
			transform: translate(-50%, -50%) rotate(135deg);
		}

		&.left::after {

			left: 0;
			top: 50%;
			transform: translateX(-50%) rotate(45deg);
		}

		&.right::after {

			right: 0;
			top: 50%;
			transform: translateX(50%) rotate(-135deg);
		}

		&.bottom::after {

			left: 50%;
			bottom: 0;
			transform: translate(-50%, 50%) rotate(-45deg);
		}
	}
}